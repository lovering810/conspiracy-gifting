import argparse
import ast
import os
from conspiracygifting import conspiracy

MAILGUN_URL = os.environ.get('MAILGUN_URL', None)
MAILGUN_FROM = os.environ.get('MAILGUN_FROM', None)
MAILGUN_API_KEY = os.environ.get('MAILGUN_API_KEY', None)
MAILGUN_ENDPOINT = os.environ.get('MAILGUN_ENDPOINT', None)

SUBJECT_TEMPLATE = '{name} - Conspiracy Gifting'
BODY_TEMPLATE = '''
Your mission, should you choose to accept it, is to select the most awesome of gift(s) for {name}. The details of the mission are simple:

* Reply-all to share information or cool stories about {name}
* Synthesize information and begin discussion of *awesome gift ideas*
* Gift ideas should fall under any of the following:
  * Relevant to their interests
  * Thoughtful or meaningful
  * Funny or cutesy
  * Just plain cool
* Sum price of gift(s) must stay under $20.
* Once a concensus is met, ONE appointed member (unless otherwise decided by your team) will arrange to get said gift(s).
* Be careful not to leak the information to {name}, check which thread you are replying to and the to/cc/bcc addresses before sending!
* Gifting will happen 12/17, so make sure any online orders are delivered by then.

Good luck!
'''

def create_arg_parser():
  parser = argparse.ArgumentParser(prog='conspiracy gifting',
                                   description='Create some conspiracies.',
                                   usage='%(prog)s [options]')
  parser.add_argument('-f', '--filename', help='denote if the input is a filename',
					  type=str) 
  parser.add_argument('-l', '--list', help='denote if the input is a filename',
					  nargs='+') 
  return parser

def main():
  '''Runs the program'''
  parser = create_arg_parser()
  args = parser.parse_args()

  if args.filename:
	with open(args.filename, 'r') as f:
	  members = f.readlines()[0].strip()
  elif args.list:
    members = args.list
	#coerce strings to dicts
    members = [ast.literal_eval(m) for m in members]

  conspirator = conspiracy.ConspiracyCreator(MAILGUN_URL,
											  MAILGUN_FROM,
											  MAILGUN_API_KEY,
											  MAILGUN_ENDPOINT,
											  SUBJECT_TEMPLATE,
											  BODY_TEMPLATE)
  conspirator.validate_members(members)
  conspirator.send_email()

if __name__ == '__main__':
  main()
